// <auto-generated />
using System;
using AmeliorateAegis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmeliorateAegis.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211012121046_AddedProvincialLison")]
    partial class AddedProvincialLison
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AmeliorateAegis.Models.Attendance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("PupilId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PupilId");

                    b.HasIndex("TeacherId");

                    b.ToTable("PupilAttendance");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Centre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Centres");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddressLine1 = "123 John Newton SW",
                            AddressLine2 = "Newton Park",
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 824, DateTimeKind.Local).AddTicks(9723),
                            Name = "Kabega"
                        },
                        new
                        {
                            Id = 2L,
                            AddressLine1 = "237 John Newton SW",
                            AddressLine2 = "New Brighton",
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 825, DateTimeKind.Local).AddTicks(8827),
                            Name = "Sol Futi"
                        },
                        new
                        {
                            Id = 3L,
                            AddressLine1 = "123 John Newton SW",
                            AddressLine2 = "Newton Park",
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 825, DateTimeKind.Local).AddTicks(8924),
                            Name = "Daku"
                        });
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Financial", b =>
                {
                    b.Property<int>("FinancialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("centerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regionCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("totalAmount")
                        .HasColumnType("float");

                    b.HasKey("FinancialId");

                    b.ToTable("Financials");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.LessonPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("LessonPlans");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Meeting", b =>
                {
                    b.Property<int>("MeetingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("MeetingID");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Parent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.ToTable("Parents");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(7893),
                            DoB = new DateTime(1994, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(8894),
                            FirstName = "Jane",
                            LastName = "Pope"
                        },
                        new
                        {
                            Id = 2L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9426),
                            DoB = new DateTime(1988, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9458),
                            FirstName = "Thembeka",
                            LastName = "Qweba"
                        },
                        new
                        {
                            Id = 3L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9485),
                            DoB = new DateTime(1976, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9487),
                            FirstName = "Jane",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 4L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9489),
                            DoB = new DateTime(1967, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9490),
                            FirstName = "Jon",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 5L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9492),
                            DoB = new DateTime(1992, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9493),
                            FirstName = "Joshua",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 6L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9495),
                            DoB = new DateTime(1972, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9496),
                            FirstName = "Thandi",
                            LastName = "Newton"
                        },
                        new
                        {
                            Id = 7L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9497),
                            DoB = new DateTime(1996, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9498),
                            FirstName = "Amanda",
                            LastName = "Qweba"
                        },
                        new
                        {
                            Id = 8L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9499),
                            DoB = new DateTime(2000, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9500),
                            FirstName = "Amyoli",
                            LastName = "Soze"
                        },
                        new
                        {
                            Id = 9L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9502),
                            DoB = new DateTime(1991, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9503),
                            FirstName = "Jongokhaya",
                            LastName = "Khwili"
                        },
                        new
                        {
                            Id = 10L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9505),
                            DoB = new DateTime(1989, 10, 12, 14, 10, 45, 826, DateTimeKind.Local).AddTicks(9506),
                            FirstName = "Thandeka",
                            LastName = "Khehle"
                        });
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Period", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Periods");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(115),
                            Name = "Term 1"
                        },
                        new
                        {
                            Id = 2L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(787),
                            Name = "Term 2"
                        },
                        new
                        {
                            Id = 3L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(809),
                            Name = "Term 3"
                        },
                        new
                        {
                            Id = 4L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(811),
                            Name = "Term 4"
                        });
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DOB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FullNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Programme", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5694),
                            Name = "Literacy Development"
                        },
                        new
                        {
                            Id = 2L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(6618),
                            Name = "Math And Science"
                        },
                        new
                        {
                            Id = 3L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(6646),
                            Name = "Song And Music"
                        },
                        new
                        {
                            Id = 4L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(6648),
                            Name = "Art And Music"
                        },
                        new
                        {
                            Id = 5L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(6649),
                            Name = "Language And Speech"
                        });
                });

            modelBuilder.Entity("AmeliorateAegis.Models.ProgrammeCentre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProgramId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.HasIndex("ProgramId");

                    b.ToTable("Pro_Centres");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.ProgrammeEnrollment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("PupilId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PupilId");

                    b.ToTable("Pro_Enrollments");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.ProgressReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Mark")
                        .HasColumnType("float");

                    b.Property<long>("PeriodId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProgramId")
                        .HasColumnType("bigint");

                    b.Property<long>("PupilId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("PupilId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ProgressReports");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Pupil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.HasIndex("ParentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Pupils");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(3318),
                            DoB = new DateTime(2016, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(4139),
                            FirstName = "Peter",
                            LastName = "Pope",
                            ParentId = 1L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5009),
                            DoB = new DateTime(2017, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5047),
                            FirstName = "Amahle",
                            LastName = "Qweba",
                            ParentId = 2L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5077),
                            DoB = new DateTime(2016, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5079),
                            FirstName = "Junior",
                            LastName = "Doe",
                            ParentId = 3L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5081),
                            DoB = new DateTime(2017, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5082),
                            FirstName = "Jerry",
                            LastName = "Doe",
                            ParentId = 4L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5084),
                            DoB = new DateTime(2015, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5085),
                            FirstName = "JJ",
                            LastName = "Doe",
                            ParentId = 5L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5087),
                            DoB = new DateTime(2017, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5088),
                            FirstName = "Mihle",
                            LastName = "Newton",
                            ParentId = 6L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5089),
                            DoB = new DateTime(2016, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5090),
                            FirstName = "Sinazo",
                            LastName = "Qweba",
                            ParentId = 7L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5092),
                            DoB = new DateTime(2015, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5093),
                            FirstName = "Buhle",
                            LastName = "Soze",
                            ParentId = 8L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5095),
                            DoB = new DateTime(2017, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5096),
                            FirstName = "Khaya",
                            LastName = "Khwili",
                            ParentId = 9L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5097),
                            DoB = new DateTime(2016, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(5098),
                            FirstName = "Kubeka",
                            LastName = "Khehle",
                            ParentId = 10L,
                            TeacherId = 1L
                        });
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Regional", b =>
                {
                    b.Property<int>("RegionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("RegionalId");

                    b.ToTable("Regionals");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationTime = new DateTime(2021, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(1390),
                            DoB = new DateTime(1976, 10, 12, 14, 10, 45, 827, DateTimeKind.Local).AddTicks(2292),
                            FirstName = "Margaret",
                            LastName = "Van Hum",
                            Qualification = "Bachelor Of Education In Child Development"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<long?>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CentreId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Attendance", b =>
                {
                    b.HasOne("AmeliorateAegis.Models.Pupil", "Pupil")
                        .WithMany()
                        .HasForeignKey("PupilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmeliorateAegis.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmeliorateAegis.Models.LessonPlan", b =>
                {
                    b.HasOne("AmeliorateAegis.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Parent", b =>
                {
                    b.HasOne("AmeliorateAegis.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Programme", b =>
                {
                    b.HasOne("AmeliorateAegis.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId");
                });

            modelBuilder.Entity("AmeliorateAegis.Models.ProgrammeCentre", b =>
                {
                    b.HasOne("AmeliorateAegis.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmeliorateAegis.Models.Programme", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmeliorateAegis.Models.ProgrammeEnrollment", b =>
                {
                    b.HasOne("AmeliorateAegis.Models.Pupil", "Pupil")
                        .WithMany("Enrollments")
                        .HasForeignKey("PupilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmeliorateAegis.Models.ProgressReport", b =>
                {
                    b.HasOne("AmeliorateAegis.Models.Period", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmeliorateAegis.Models.Programme", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmeliorateAegis.Models.Pupil", "Pupil")
                        .WithMany("Reports")
                        .HasForeignKey("PupilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmeliorateAegis.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmeliorateAegis.Models.Pupil", b =>
                {
                    b.HasOne("AmeliorateAegis.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmeliorateAegis.Models.Parent", "Parent")
                        .WithMany("Pupils")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmeliorateAegis.Models.Teacher", "Teacher")
                        .WithMany("Pupils")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmeliorateAegis.Models.ApplicationUser", b =>
                {
                    b.HasOne("AmeliorateAegis.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId");
                });
#pragma warning restore 612, 618
        }
    }
}
